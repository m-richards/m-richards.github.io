<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Matt Richards - Blog</title><link>https://m-richards.github.io/post/</link><description>Recent content in Posts on Matt Richards - Blog</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Sun, 15 Jan 2023 21:45:40 +1100</lastBuildDate><atom:link href="https://m-richards.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring the cross platform dependency management situation in Python - Part 2: piptools internals</title><link>https://m-richards.github.io/post/python_dep_management2/</link><pubDate>Sun, 15 Jan 2023 21:45:40 +1100</pubDate><guid>https://m-richards.github.io/post/python_dep_management2/</guid><description>This is a continuation of my previous post about pip-tools, and the unsatisfying conclusion that it doesn&amp;rsquo;t handle generating cross platform requirements particularly elegantly. I started this investigation with the premise that it should be possible to generate a cross-platform environment specification from a single computer. This post determines the validity of that premise, by taking a peek at the internals of the pip-tools and its dependency solver.
Pip-tools dependency resolver - under the covers Refresher: I was using pip-compile to generated locked requirements.</description></item><item><title>Exploring the cross platform dependency management situation in Python: piptools</title><link>https://m-richards.github.io/post/python_dep_management/</link><pubDate>Sat, 14 Jan 2023 21:32:33 +1100</pubDate><guid>https://m-richards.github.io/post/python_dep_management/</guid><description>I&amp;rsquo;ve chosen to split this post into at least two parts, as the preamble to give context became a blog post in itself. So this first piece focuses the context around introducing stricter dependency management, and outlining the cracks that appear when trying to come up with a solution that works on multiple platforms.
Recently, I&amp;rsquo;ve been looking into transitioning a project (in this case, a large transport model dev codebase) from a heavy development cycle into a production like state.</description></item><item><title>Getting into blogging</title><link>https://m-richards.github.io/post/my-first-post/</link><pubDate>Mon, 02 Jan 2023 15:06:52 +1000</pubDate><guid>https://m-richards.github.io/post/my-first-post/</guid><description>Generally, I&amp;rsquo;m not one for cliches. I&amp;rsquo;m a full-time cynic, part-time pesimist and view New Years resolutions with a generous dose of skepticism, thinking most likely these are happy lies we tell ourselves to sleep better at night, before the fade into obscurity a few weeks later. Yet here I find myself, on the second day of 2023 finally acting on a blogging idea I&amp;rsquo;ve been mulling over for a fair while now.</description></item></channel></rss>