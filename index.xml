<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Matt Richards - Blog</title><link>https://m-richards.github.io/</link><description>Recent content on Matt Richards - Blog</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Sun, 10 Sep 2023 20:17:43 +1000</lastBuildDate><atom:link href="https://m-richards.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Tidbits from the Scientific python development guide</title><link>https://m-richards.github.io/post/scientific_python_development_guide/</link><pubDate>Sun, 10 Sep 2023 20:17:43 +1000</pubDate><guid>https://m-richards.github.io/post/scientific_python_development_guide/</guid><description>Recently, the (Scientific Python development guide)[https://learn.scientific-python.org/development/] was (announced)[https://blog.scientific-python.org/scientific-python/dev-summit-1-development-guide/] and released, serving as a consolidation of existing developer guides outlining software development best practices in the scientific python ecosystem. It&amp;rsquo;s grown out of a collection of materials for (Scikit HEP)[https://scikit-hep.org/] which I&amp;rsquo;d first encountered years ago, looking for python support for ragged arrays and noted the very useful documentation pages.
It&amp;rsquo;s very nice to see a consensus backed series of guidelines and first principles in a consolidated location, as python packaging is esoteric at times, and has a long legacy of deprecated ways of doing things (which often are unfortunately still in regular use).</description></item><item><title>Setting up a GeoPandas dev environment using the pandas main branch (Meson Edition)</title><link>https://m-richards.github.io/post/geopandas_dev_env_meson/</link><pubDate>Tue, 18 Jul 2023 18:05:38 +1100</pubDate><guid>https://m-richards.github.io/post/geopandas_dev_env_meson/</guid><description>I&amp;rsquo;ve previously written a post about how to set up a developer environment for GeoPandas which is based upon the latest commit of pandas on github. With pandas 2.0 (or perhaps a minor patch after), pandas switched to using a meson based build backend - and this updates the instructions accordingly. This post draws from my previous one, plus elements of this post, with some of my own fixes added.</description></item><item><title>Tips for success installing python packages</title><link>https://m-richards.github.io/post/geospatial_package_installation/</link><pubDate>Sat, 27 May 2023 12:09:28 +1000</pubDate><guid>https://m-richards.github.io/post/geospatial_package_installation/</guid><description>Although python has a functional story around packaging, there are plenty of footguns for people who only occasionally dabble with package management. This situation is fairly common in my line of work, when a project is started, the project team get set up with working developer environments, and then happily forget about packaging problems for the next x months until the next project starts. So this is a quick reference I hope to point people to the next time I get &amp;ldquo;my python environment isn&amp;rsquo;t working / I can&amp;rsquo;t install package x questions&amp;rdquo;.</description></item><item><title>Data Roaming</title><link>https://m-richards.github.io/post/roaming/</link><pubDate>Mon, 27 Feb 2023 21:01:14 +1100</pubDate><guid>https://m-richards.github.io/post/roaming/</guid><description>I&amp;rsquo;ve recently been on an overseas trip, and it seems without fail that the concept of mobile roaming charges causes confusion and headaches for me (or perhaps more specifically my travelling companions). This is a short post to crystallise what I&amp;rsquo;ve re-learnt and to have something to refer to
There are a few related concepts at play:
Roaming - whether you can do anything (make calls, send messages, emergency calls, access the internet) with your phone using cellular data.</description></item><item><title>Remote Access with SSH Quickstart</title><link>https://m-richards.github.io/post/using_ssh/</link><pubDate>Mon, 06 Feb 2023 20:20:25 +1100</pubDate><guid>https://m-richards.github.io/post/using_ssh/</guid><description>This is a post that I hope to be able to point someone to the next time I&amp;rsquo;m teaching someone how to ssh into a machine. I&amp;rsquo;m sure there are better posts out there on this, but I want this to be terse and pragmatic, without a whole lot of backstory.
So you want to log into a remote server, either a local server computer or on the cloud. Usually, I&amp;rsquo;m teaching a windows speaking audience, where I personally use WSL for ssh, but these instructions are also geared to powershell.</description></item><item><title>Setting up a pandas/main environment for GeoPandas</title><link>https://m-richards.github.io/post/geopandas_dev_env/</link><pubDate>Sun, 05 Feb 2023 18:05:38 +1100</pubDate><guid>https://m-richards.github.io/post/geopandas_dev_env/</guid><description>Although it&amp;rsquo;s not something I tend to advertise very often, I&amp;rsquo;m a maintainer for GeoPandas which is the de-facto standard tool for tabular geospatial analysis in Python. My contributions here wax and wane here with the amount of free time and mental space I have to volunteer. As part of this, we keep the software in sync with developments in pandas, and our CI tests against pandas/main. From time to time (more frequently with the upcoming pandas 2.</description></item><item><title>Exploring the cross platform dependency management situation in Python - Part 2: piptools internals</title><link>https://m-richards.github.io/post/python_dep_management2/</link><pubDate>Sun, 15 Jan 2023 21:45:40 +1100</pubDate><guid>https://m-richards.github.io/post/python_dep_management2/</guid><description>This is a continuation of [my previous post about pip-tools]({{&amp;lt; ref &amp;ldquo;python_dep_management.md&amp;rdquo; &amp;gt;}}), and the unsatisfying conclusion that it doesn&amp;rsquo;t handle generating cross platform requirements particularly elegantly. I started this investigation with the premise that it should be possible to generate a cross-platform environment specification from a single computer. This post determines the validity of that premise, by taking a peek at the internals of the pip-tools and its dependency solver.</description></item><item><title>Exploring the cross platform dependency management situation in Python: piptools</title><link>https://m-richards.github.io/post/python_dep_management/</link><pubDate>Sat, 14 Jan 2023 21:32:33 +1100</pubDate><guid>https://m-richards.github.io/post/python_dep_management/</guid><description>I&amp;rsquo;ve chosen to split this post into at least two parts, as the preamble to give context became a blog post in itself. So this first piece focuses the context around introducing stricter dependency management, and outlining the cracks that appear when trying to come up with a solution that works on multiple platforms.
Recently, I&amp;rsquo;ve been looking into transitioning a project (in this case, a large transport model dev codebase) from a heavy development cycle into a production like state.</description></item><item><title>Getting into blogging</title><link>https://m-richards.github.io/post/my-first-post/</link><pubDate>Mon, 02 Jan 2023 15:06:52 +1000</pubDate><guid>https://m-richards.github.io/post/my-first-post/</guid><description>Generally, I&amp;rsquo;m not one for cliches. I&amp;rsquo;m a full-time cynic, part-time pesimist and view New Years resolutions with a generous dose of skepticism, thinking most likely these are happy lies we tell ourselves to sleep better at night, before the fade into obscurity a few weeks later. Yet here I find myself, on the second day of 2023 finally acting on a blogging idea I&amp;rsquo;ve been mulling over for a fair while now.</description></item><item><title/><link>https://m-richards.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://m-richards.github.io/about/</guid><description>title: &amp;ldquo;About&amp;rdquo; date: 2023-01-02T15:06:52+10:00 menu: &amp;ldquo;main&amp;rdquo; weight: 50
Under construction</description></item></channel></rss>